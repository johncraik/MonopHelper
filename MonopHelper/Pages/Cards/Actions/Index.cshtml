@page "{id}"
@using MonopolyCL.Extensions
@using MonopolyCL.Models.Cards.Enums
@model MonopHelper.Pages.Cards.Actions.Index

@{
    ViewData["Title"] = "Card Action";
}
<button class="btn btn-sm btn-primary rounded-pill px-3 mb-3" onclick="location.assign('/Cards/Manage')">Go Back</button>
<div class="card mb-4">
    <div class="card-header bg-info text-white">
        Card Information
    </div>
    <div class="card-body bg-light">
        <div class="row">
            <div class="col-sm-4">
                <div class="mt mb-3">
                    <label><b>Card Type:</b></label><br/>
                    <p>@Model.Card.CardType.Name</p>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="mt mb-3">
                    <label><b>Card Deck:</b></label><br/>
                    <p>@Model.Card.CardDeck.Name</p>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="mt mb-3">
                    <label><b>Card Deck Difficulty Rating:</b></label><br/>
                    <p>@Model.Card.CardDeck.DiffRating</p>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-8">
                <div class="mt mb-3">
                    <label><b>Card Text:</b></label><br/>
                    <p>@Model.Card.Text</p>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="mt mb-3">
                    <label><b>Card Cost:</b></label><br/>
                    <p>@(Model.Card.Cost?.ToString() ?? "None")</p>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header @Model.ActionCol">
        @{
            if (Model.CardAction != null)
            {
                <span>@Model.CardAction.Action.GetDisplayName() Action</span>
            }
            else
            {
                <span>Setup Action</span>
            }
        }
    </div>
    <div class="card-body bg-light">
        @{
            if (Model.CardAction != null)
            {
                switch (Model.CardAction.Action)
                {
                    case CARD_ACTION.ADVANCE:
                        <div class="row">
                            <div class="col-sm-5">
                                <p>
                                    This card is set up with an 'Advance' action. This will move the player to the specified board index.
                                    <br/>
                                    <b>Board Index: </b>@(Model.Action?.AdvanceAction?.AdvanceIndex).
                                    <br/>
                                    <b>Collect Money if Passed Go: </b>@(Model.Action?.AdvanceAction?.ClaimGo == true ? "Yes" : "No").
                                </p>
                                <span>
                                    Board corner indexes:
                                    <ul>
                                        <li><b>GO: </b>0</li>
                                        <li><b>Jail: </b>10</li>
                                        <li><b>Free Parking: </b>20</li>
                                        <li><b>Go to Jail: </b>30</li>
                                    </ul>
                                </span><br/>
                            </div>
                            <div class="col-sm-2 pt-2">
                                <div class="prop bt bb bl br">
                                    <div class="bb @(Model.Action?.AdvanceAction?.Colour)" style="height: 20%"></div>
                                    <div class="bg-white prop-index" style="height: 80%">
                                        <span>@Model.Action?.AdvanceAction?.AdvanceIndex</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-5 p-2">
                                <img src="~/board.png" width="100%" height="100%" alt="Monopoly Board"/>
                            </div>
                        </div>
                        break;
                    case CARD_ACTION.MOVE:
                        <div class="mb-4">
                            <label><b>Move Amount:</b></label><br/>
                            <p>@(Model.Action?.MoveAction?.MoveAmount.ToString() ?? "NaN")</p>
                            <label><b>Direction:</b></label><br/>
                            <p>@(Model.Action?.MoveAction?.IsForward == false ? "Backwards" : "Forwards")</p>
                        </div>
                        break;
                    case CARD_ACTION.KEEP_CARD:
                        <p>The player who draws this card will keep it. The card will be removed from the deck until it is used by the player.</p>
                        break;
                    case CARD_ACTION.CHOICE:
                        <div class="mb-4">
                            <p>The player can pay the amount on this card (Cost) or choose a card with the following type.</p>
                            <label><b>Card Type:</b></label><br/>
                            <p>@(Model.Action?.ChoiceAction?.CardTypeName ?? "N/A")</p>
                        </div>
                        break;
                    case CARD_ACTION.PAY_PLAYER:
                        <div class="row">
                            <div class="col-sm-6 mb-3">
                                <label><b>Pay/Receive Type:</b></label><br/>
                                <p>@(Model.Action?.PayPlayerAction?.PayToType.GetDisplayName() ?? "N/A")</p>
                            </div>
                            <div class="col-sm-6 mb-3">
                                <label><b>Amount Paid/Received:</b></label><br/>
                                <p>£@(Model.Action?.PayPlayerAction?.AmountToPlayer.ToString() ?? "NaN")</p>
                            </div>
                            <p><b>NOTE: </b>A negative amount refers to the player paying, positive amount refers to the player receiving.</p>
                        </div>
                        break;
                    case CARD_ACTION.STREET_REPAIRS:
                        <div class="mb-4">
                            <label><b>House Cost:</b></label><br/>
                            <p>£@(Model.Action?.StreetRepairsAction?.HouseCost.ToString() ?? "NaN")</p>
                            <label><b>Hotel Cost:</b></label><br/>
                            <p>£@(Model.Action?.StreetRepairsAction?.HotelCost.ToString() ?? "NaN")</p>
                        </div>
                        break;
                }
                <div class="mt">
                    <button class="btn btn-warning">Delete Action</button>
                </div>
            }
            else
            {
                <p>
                    <span class="fa-solid fa-warning text-warning"></span>
                    Make sure the action you define matches what the card says.
                </p>
                <div class="mt row">
                    <div class="col-sm-4 mb-4">
                        <h4><b>Advance Action</b></h4>
                        <p>
                            This action will move the player to the chosen space on the board.
                        </p>
                        <button class="btn btn-secondary bg-adv" onclick="location.assign('/Cards/Actions/Setup/@(Model.Card.Id)?action=0')">
                            Create Advance Action
                        </button>
                    </div>
                    <div class="col-sm-4 mb-4">
                        <h4><b>Move Action</b></h4>
                        <p>
                            This action will move the player a specified amount, either forwards or backwards.
                        </p>
                        <button class="btn btn-secondary bg-move" onclick="location.assign('/Cards/Actions/Setup/@(Model.Card.Id)?action=4')">
                            Create Move Action
                        </button>
                    </div>
                    <div class="col-sm-4 mb-4">
                        <h4><b>Keep Action</b></h4>
                        <p>
                            This action will allow the player to keep the card and use at a later time.
                            The card will be removed from the deck until it is played.
                        </p>
                        <button class="btn btn-secondary bg-keep" onclick="location.assign('/Cards/Actions/Setup/@(Model.Card.Id)?action=3')">
                            Create Keep Action
                        </button>
                    </div>
                    <div class="col-sm-4 mb-4">
                        <h4><b>Choice Action</b></h4>
                        <p>
                            This action will allow the player to either pay the amount on the card, or take a different card.
                        </p>
                        <button class="btn btn-secondary bg-choice" onclick="location.assign('/Cards/Actions/Setup/@(Model.Card.Id)?action=5')">
                            Create Choice Action
                        </button>
                    </div>
                    <div class="col-sm-4 mb-4">
                        <h4><b>Pay Player Action</b></h4>
                        <p>
                            This action will take the amount stated on the card and pay to the player on the left, right, or all players.
                            <br/>
                            Positive cost on the card will mean the player will receive the amount.
                        </p>
                        <button class="btn btn-secondary bg-payply" onclick="location.assign('/Cards/Actions/Setup/@(Model.Card.Id)?action=2')">
                            Create Pay Player Action
                        </button>
                    </div>
                    <div class="col-sm-4 mb-4">
                        <h4><b>Street Repairs Action</b></h4>
                        <p>
                            This action will apply a cost based on the number of houses and hotels the player has.
                        </p>
                        <button class="btn btn-secondary bg-sr" onclick="location.assign('/Cards/Actions/Setup/@(Model.Card.Id)?action=1')">
                            Create Street Repairs Action
                        </button>
                    </div>
                </div>
            }
        }
    </div>
</div>